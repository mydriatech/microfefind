# Tag on merge to main from pull request (recommended)
name: On merge of pull request
on:
  pull_request:
    types:
      - closed
    branches:
      - main
concurrency: production
env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
jobs:

  # https://github.com/anothrNick/github-tag-action
  tag:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    outputs:
      new_tag: ${{ steps.taggerDryRun.outputs.new_tag }}
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.merge_commit_sha }}
        fetch-depth: '0'
    - name: Bump version and push tag
      id: taggerDryRun
      uses: anothrNick/github-tag-action@1.67.0 # Don't use @master or @v1 unless you're happy to test the latest version
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # if you don't want to set write permissions use a PAT token
        WITH_V: false
        PRERELEASE: false
        INITIAL_VERSION: 0.1.0
        DEFAULT_BUMP: patch

  containerize:
    needs: tag
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: 'refs/tags/${{ needs.tag.outputs.new_tag }}'

      # Install the cosign tool
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 #v3.5.0
        with:
          cosign-release: 'v2.2.4'

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # Login against a Docker registry
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: type=semver,pattern={{version}},value=v${{ needs.tag.outputs.new_tag }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          file: ./Containerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            CARGO_PKG_VERSION_OVERRIDE=${{ needs.tag.outputs.new_tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Sign the resulting Docker image digest
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

  release-container:
    needs:
      - tag
      - containerize
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      # https://github.com/softprops/action-gh-release
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          body: "The released container image has been published to
                 `ghcr.io/mydriatech/gh-playground:${{ needs.tag.outputs.new_tag }}`.
                 
                 Consider using the Helm chart release instead, unless you know what you are doing.
                "
          generate_release_notes: true
          append_body: true
          name: ${{ github.event.repository.name }}-${{ needs.tag.outputs.new_tag }}-container
          tag_name: ${{ needs.tag.outputs.new_tag }}
          make_latest: false

  release-helm:
    needs:
      - tag
      - release-container
    permissions:
      contents: write
      packages: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      # https://github.com/mikefarah/yq
      - name: Set Helm Chart version
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.version = "${{ needs.tag.outputs.new_tag }}"' 'charts/${{ github.event.repository.name }}/Chart.yaml'
      - name: Set Helm Chart appCersion
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.appVersion = "${{ needs.tag.outputs.new_tag }}"' 'charts/${{ github.event.repository.name }}/Chart.yaml'
      # https://helm.sh/docs/howto/chart_releaser_action/
      # https://github.com/marketplace/actions/helm-chart-releaser
      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          mark_as_latest: true
